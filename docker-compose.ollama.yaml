---
services:
  scriberr:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      redis:
        condition: service_started
      ollama:
        condition: service_started
      ollama-models:
        condition: service_completed_successfully

    ports:
      - "3000:3000"
      - "8080:8080" # Optionally expose DB UI
      - "9243:9243" # Optionally expose JobQueue UI
    environment:
      - OPENAI_API_KEY=<reallylongsecretkey>
      - OPENAI_ENDPOINT=http://ollama:11434/v1
      - OPENAI_MODEL=llama3.2 # Ensure this model matches in `ollama-models` service
      - OPENAI_ROLE=user
      - POCKETBASE_ADMIN_EMAIL=admin@example.com
      - POCKETBASE_ADMIN_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SCRIBO_FILES=/scriberr
    volumes:
      - ./.dockerdata/pb_data:/app/db
      - ./.dockerdata/scriberr:/scriberr

  redis:
    image: redis:7-alpine
    volumes:
      - ./.dockerdata/redis:/data

  ollama:
    image: ollama/ollama:latest
    entrypoint:
    environment:
      - OLLAMA_ORIGINS="*"
    deploy:
      resources:
        reservations:
          devices:
            - count: all
              capabilities: [gpu]
    volumes:
      - ./.dockerdata/ollama:/root/.ollama

  ollama-models:
    image: curlimages/curl:latest
    depends_on:
      - ollama
    command: >
      http://ollama:11434/api/pull -d '{"name":"llama3.2"}'